document.addEventListener('DOMContentLoaded', ()=>{
  let rawData=null;
  document.getElementById('exportCsv').addEventListener('click', ()=>{
    if(!rawData){alert('No data');return;}
    const csv = Papa.unparse(rawData);
    const blob = new Blob([csv], {type:'text/csv'});
    const a = document.createElement('a'); a.href = URL.createObjectURL(blob); a.download='exported-data.csv'; a.click();
  });
  fetch('data.csv').then(r=>r.text()).then(t=>{ Papa.parse(t,{header:true,skipEmptyLines:true,dynamicTyping:true,complete:(res)=>{ rawData=res.data; renderSummary(rawData); renderTable(rawData); renderCharts(rawData);} });}).catch(e=>{console.error(e);alert('Failed to load data.csv');});
  function renderSummary(data){ const totalReceived=data.reduce((s,r)=>s+(Number(r['Total Recieved']||r['Total Received']||0)),0); const totalScanned=data.reduce((s,r)=>s+(Number(r['Total Scanned']||0)),0); const diff=totalReceived-totalScanned; document.getElementById('summary').innerHTML=`<h2>Summary</h2><p><strong>Total Received:</strong> ${totalReceived}</p><p><strong>Total Scanned:</strong> ${totalScanned}</p><p><strong>Difference:</strong> ${diff}</p>`;}
  function renderTable(data){ const thead=document.querySelector('#dataTable thead'); const tbody=document.querySelector('#dataTable tbody'); thead.innerHTML=''; tbody.innerHTML=''; if(!data.length) return; const keys=Object.keys(data[0]); const htr=document.createElement('tr'); keys.forEach(k=>{const th=document.createElement('th'); th.textContent=k; htr.appendChild(th);}); thead.appendChild(htr); data.forEach(row=>{ const tr=document.createElement('tr'); keys.forEach(k=>{ const td=document.createElement('td'); td.textContent=row[k]===undefined||row[k]===null?'':row[k]; tr.appendChild(td); }); tbody.appendChild(tr); }); }
  function renderCharts(data){ if(window._dailyChart) window._dailyChart.destroy(); if(window._weeklyChart) window._weeklyChart.destroy(); const labels = data.map(r=>r['Date']||r['date']||''); const totals = data.map(r=>Number(r['Total Recieved']||r['Total Received']||0)); const ctx1=document.getElementById('dailyChart').getContext('2d'); window._dailyChart = new Chart(ctx1,{type:'line',data:{labels, datasets:[{label:'Total Received', data:totals, borderColor:'rgb(37,99,235)', tension:0.2}]}, options:{responsive:true, maintainAspectRatio:false}}); const weeklyMap={}; data.forEach(r=>{ const d=new Date(r['Date']); if(isNaN(d)) return; const wk=isoWeekLabel(d); if(!weeklyMap[wk]) weeklyMap[wk]=0; weeklyMap[wk]+=Number(r['Total Recieved']||r['Total Received']||0); }); const wkLabels=Object.keys(weeklyMap); const wkValues=wkLabels.map(k=>weeklyMap[k]); const ctx2=document.getElementById('weeklyChart').getContext('2d'); window._weeklyChart = new Chart(ctx2,{type:'bar',data:{labels:wkLabels,datasets:[{label:'Weekly Received',data:wkValues, backgroundColor:'rgb(16,185,129)'}]}, options:{responsive:true, maintainAspectRatio:false}}); }
  function isoWeekLabel(date){ const tmp=new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate())); tmp.setUTCDate(tmp.getUTCDate()+4-(tmp.getUTCDay()||7)); const yearStart=new Date(Date.UTC(tmp.getUTCFullYear(),0,1)); const weekNo=Math.ceil((((tmp-yearStart)/86400000)+1)/7); return tmp.getUTCFullYear()+'-W'+weekNo; }
});